{% extends 'base.html.twig' %}
{% block title %}Configuración productos
{% endblock %}
{% block body %}
	<nav class="navbar navbar-expand-lg navbar-light bg-light">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">Configuracion
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
							Internacional
						</a>
						<ul class="dropdown-menu" aria-labelledby="navbarDropdown">
							<li>
								<a class="dropdown-item" href="#">Nacional</a>
							</li>
							<li>
								<a class="dropdown-item" href="#">Internacional</a>
							</li>
						</ul>
					</li>
				</ul>
			</div>
		</div>
	</nav>
	<div class="container">
		<div class="row">
			<div class="col-3">
				<h3 class="active">Selecciona un producto</h3>
				<table class="table table-primary table-hover">
					{% for productData in productTable %}
						<tr>
							<td class="{{ productData.product_active ? "text-success" : "text-danger" }}" type="celdaproducto" data-product="{{ productData.product }}" onclick="loadProductDetails('{{ productData.product }}')">
								{{ productData.product }}
							</td>
						</tr>
					{% endfor %}
				</table>
			</div>
			<div class="col-9" id="detalles">Los detalles irán aquí</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
    {{ encore_entry_script_tags('app') }}
    
    <script>
	function loadProductDetails(product) {
	            // Realiza una llamada AJAX al controlador
	            // Puedes utilizar bibliotecas como Axios o el objeto XMLHttpRequest de JavaScript
	
	            // Ejemplo con XMLHttpRequest
	            var xhr = new XMLHttpRequest();
	            xhr.onreadystatechange = function() {
	                if (xhr.readyState === XMLHttpRequest.DONE) {
	                    if (xhr.status === 200) {
	                        // Manipula la respuesta del controlador
	                        var response = JSON.parse(xhr.responseText);
	                        // Aquí puedes actualizar la interfaz de usuario con los detalles del producto
	                        console.log(response);
	                    } else {
	                        // Maneja errores si es necesario
	                        console.error('Error al cargar detalles del producto');
	                    }
	                }
	            };
	
	            // Define la URL del controlador y realiza la solicitud POST o GET según sea necesario
	                        xhr.open('POST', '/details', true);
            xhr.setRequestHeader('Content-Type', 'application/json'); // Indica que estás enviando JSON
            xhr.send(JSON.stringify({ product: product }));
        }
    </script>
{% endblock %}
